# -*- coding: utf-8 -*-
"""resize.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17g9Jf8aOn-KLzrrgQyeQtV0Ib4lq6O8G
"""

from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)

import cv2
import numpy as np
import os

def resize_data_image(image_path, new_size=(128, 128)):
    # Read the data image using OpenCV
    data_img = cv2.imread(image_path, cv2.IMREAD_UNCHANGED)

    # Resize the data image using a method suitable for 16-bit grayscale images
    resized_data_img = cv2.resize(data_img, new_size, interpolation=cv2.INTER_AREA)

    return resized_data_img

def resize_label_image(image_path, new_size=(128, 128)):
    # Read the label image using OpenCV
    label_img = cv2.imread(image_path, cv2.IMREAD_UNCHANGED)

    # Resize the label image using nearest-neighbor interpolation
    resized_label_img = cv2.resize(label_img, new_size, interpolation=cv2.INTER_NEAREST)

    return resized_label_img

def ensure_dir(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)

# Directory paths
data_resize_dir = "/content/gdrive/MyDrive/training_dataset/data_resize128/"
label_resize_dir = "/content/gdrive/MyDrive/training_dataset/label_resize128/"

# Ensure the directories exist
ensure_dir(data_resize_dir)
ensure_dir(label_resize_dir)

# Process and save the resized images
for i in range(1, 501):  # Modify this range according to the number of your images
    data_file_number = str(i).zfill(4)
    label_file_number = str(i).zfill(3)

    # Modify these paths according to your dataset structure
    data_image_path = f"/content/gdrive/MyDrive/training_dataset/data/SOCprist{data_file_number}.tiff"
    label_image_path = f"/content/gdrive/MyDrive/training_dataset/labels/slice__{label_file_number}.tif"

    print(f"Processing {data_image_path} and {label_image_path}")

    resized_data_image = resize_data_image(data_image_path)
    resized_label_image = resize_label_image(label_image_path)

    data_save_path = f"{data_resize_dir}resized_data_{data_file_number}.tiff"
    label_save_path = f"{label_resize_dir}resized_label_{label_file_number}.tif"

    cv2.imwrite(data_save_path, resized_data_image)
    cv2.imwrite(label_save_path, resized_label_image)

    print(f"Saved: {data_save_path} and {label_save_path}")  # Confirming save location\